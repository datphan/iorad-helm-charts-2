name: Lint and Test Charts

on:
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0
        with:
          version: v3.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: kind/kind-config.yaml
        if: steps.list-changed.outputs.changed == 'true'

      # _json_key_base64 is not supported so we must convert it
      - name: GCR Keys
        if: ${{ secrets.GPG_KEY_FILE_BASE64 }}
        run: |
          echo "$GCR_JSON_KEY_BASE64" | base64 --decode >> .gcr-key
          while read -r line;
          do
           echo "::add-mask::${line}"
          done <<< "$(cat .gcr-key)"
          echo "GCR_JSON_KEY<<EOF" >> $GITHUB_ENV
          cat .gcr-key >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          # clean up
          rm .gcr-key
        shell: bash
        env:
          GCR_JSON_KEY_BASE64: ${{ secrets.GPG_KEY_FILE_BASE64 }}

      # https://github.com/docker/login-action#google-container-registry-gcr
      - name: Login to Google Container Registry (GCR)
        uses: docker/login-action@v1
        if: ${{ secrets.GPG_KEY_FILE_BASE64 }}
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ env.GCR_JSON_KEY }}

      - name: Patch GPG key's secret
        if: ${{ env.GCR_JSON_KEY }}
        run: |
          kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "gcr.io"}]}'

      - name: Load kind docker images
        run: |
          changed_list=$(ct list-changed --config ct.yaml)

          if [[ -n "$changed_list" ]]; then
              for i in "${changed_list[@]}"
              do
                  if  [[ $i == charts/* ]];
                  then
                      find ./$i -name "autorun.sh" -exec chmod +x {} \; -exec {} \;
                  fi
              done
          fi   
        if: steps.list-changed.outputs.changed == 'true'

        # should create different k8s cluster versions
      - name: Run chart-testing (install)
        run: |
          ct install --namespace default --config ct.yaml
        timeout-minutes: 30
